<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cta' inline='true' name='federated.13o23ol0tyy5pw19v20gx0vyhirt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cta' name='textscan.1wiufj90xz774m1d3lxvk0ob4rya'>
            <connection class='textscan' directory='/Users/angelica/Work/Education/DJ-Infouma/DataViz' filename='cta.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1wiufj90xz774m1d3lxvk0ob4rya' name='cta.csv' table='[cta#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='it_IT' separator=','>
            <column datatype='string' name='Strategy' ordinal='0' />
            <column datatype='integer' name='Population Increase' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1wiufj90xz774m1d3lxvk0ob4rya' name='cta.csv' table='[cta#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='it_IT' separator=','>
            <column datatype='string' name='Strategy' ordinal='0' />
            <column datatype='integer' name='Population Increase' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cta.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strategy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Strategy]</local-name>
            <parent-name>[cta.csv]</parent-name>
            <remote-alias>Strategy</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cta.csv_0EA6FE0B95274504841A9E47B9C571AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Increase</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Increase]</local-name>
            <parent-name>[cta.csv]</parent-name>
            <remote-alias>Population Increase</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cta.csv_0EA6FE0B95274504841A9E47B9C571AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='cta.csv' datatype='table' name='[__tableau_internal_object_id__].[cta.csv_0EA6FE0B95274504841A9E47B9C571AA]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/angelica/Documents/Repository personale di Tableau/Origini dati/cta.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/31/2024 02:57:54 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='cta' increment-value='%null%' refresh-type='create' rows-inserted='3' timestamp-start='2024-05-31 14:57:53.930' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Strategy</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Strategy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Strategy</remote-alias>
              <ordinal>0</ordinal>
              <family>cta.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LIT_RIT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cta.csv_0EA6FE0B95274504841A9E47B9C571AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population Increase</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population Increase]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population Increase</remote-alias>
              <ordinal>1</ordinal>
              <family>cta.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cta.csv_0EA6FE0B95274504841A9E47B9C571AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Italy&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cta.csv' id='cta.csv_0EA6FE0B95274504841A9E47B9C571AA'>
            <properties context=''>
              <relation connection='textscan.1wiufj90xz774m1d3lxvk0ob4rya' name='cta.csv' table='[cta#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='it_IT' separator=','>
                  <column datatype='string' name='Strategy' ordinal='0' />
                  <column datatype='integer' name='Population Increase' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='population' inline='true' name='federated.023g0c810by3v312d8yp10dpqc3q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='population' name='textscan.1luqenc1leb6ot1b2sumg00msbdn'>
            <connection class='textscan' directory='/Users/angelica/Work/Education/DJ-Infouma/DataViz/source' filename='population.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' date-parse-format='yyyy' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[1960]' />
            <value name='[1961]' />
            <value name='[1962]' />
            <value name='[1963]' />
            <value name='[1964]' />
            <value name='[1965]' />
            <value name='[1966]' />
            <value name='[1967]' />
            <value name='[1968]' />
            <value name='[1969]' />
            <value name='[1970]' />
            <value name='[1971]' />
            <value name='[1972]' />
            <value name='[1973]' />
            <value name='[1974]' />
            <value name='[1975]' />
            <value name='[1976]' />
            <value name='[1977]' />
            <value name='[1978]' />
            <value name='[1979]' />
            <value name='[1980]' />
            <value name='[1981]' />
            <value name='[1982]' />
            <value name='[1983]' />
            <value name='[1984]' />
            <value name='[1985]' />
            <value name='[1986]' />
            <value name='[1987]' />
            <value name='[1988]' />
            <value name='[1989]' />
            <value name='[1990]' />
            <value name='[1991]' />
            <value name='[1992]' />
            <value name='[1993]' />
            <value name='[1994]' />
            <value name='[1995]' />
            <value name='[1996]' />
            <value name='[1997]' />
            <value name='[1998]' />
            <value name='[1999]' />
            <value name='[2000]' />
            <value name='[2001]' />
            <value name='[2002]' />
            <value name='[2003]' />
            <value name='[2004]' />
            <value name='[2005]' />
            <value name='[2006]' />
            <value name='[2007]' />
            <value name='[2008]' />
            <value name='[2009]' />
            <value name='[2010]' />
            <value name='[2011]' />
            <value name='[2012]' />
            <value name='[2013]' />
            <value name='[2014]' />
            <value name='[2015]' />
            <value name='[2016]' />
            <value name='[2017]' />
            <value name='[2018]' />
            <value name='[2019]' />
            <value name='[2020]' />
            <value name='[2021]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[population.csv].[1960]' />
              <field name='[population.csv].[1961]' />
              <field name='[population.csv].[1962]' />
              <field name='[population.csv].[1963]' />
              <field name='[population.csv].[1964]' />
              <field name='[population.csv].[1965]' />
              <field name='[population.csv].[1966]' />
              <field name='[population.csv].[1967]' />
              <field name='[population.csv].[1968]' />
              <field name='[population.csv].[1969]' />
              <field name='[population.csv].[1970]' />
              <field name='[population.csv].[1971]' />
              <field name='[population.csv].[1972]' />
              <field name='[population.csv].[1973]' />
              <field name='[population.csv].[1974]' />
              <field name='[population.csv].[1975]' />
              <field name='[population.csv].[1976]' />
              <field name='[population.csv].[1977]' />
              <field name='[population.csv].[1978]' />
              <field name='[population.csv].[1979]' />
              <field name='[population.csv].[1980]' />
              <field name='[population.csv].[1981]' />
              <field name='[population.csv].[1982]' />
              <field name='[population.csv].[1983]' />
              <field name='[population.csv].[1984]' />
              <field name='[population.csv].[1985]' />
              <field name='[population.csv].[1986]' />
              <field name='[population.csv].[1987]' />
              <field name='[population.csv].[1988]' />
              <field name='[population.csv].[1989]' />
              <field name='[population.csv].[1990]' />
              <field name='[population.csv].[1991]' />
              <field name='[population.csv].[1992]' />
              <field name='[population.csv].[1993]' />
              <field name='[population.csv].[1994]' />
              <field name='[population.csv].[1995]' />
              <field name='[population.csv].[1996]' />
              <field name='[population.csv].[1997]' />
              <field name='[population.csv].[1998]' />
              <field name='[population.csv].[1999]' />
              <field name='[population.csv].[2000]' />
              <field name='[population.csv].[2001]' />
              <field name='[population.csv].[2002]' />
              <field name='[population.csv].[2003]' />
              <field name='[population.csv].[2004]' />
              <field name='[population.csv].[2005]' />
              <field name='[population.csv].[2006]' />
              <field name='[population.csv].[2007]' />
              <field name='[population.csv].[2008]' />
              <field name='[population.csv].[2009]' />
              <field name='[population.csv].[2010]' />
              <field name='[population.csv].[2011]' />
              <field name='[population.csv].[2012]' />
              <field name='[population.csv].[2013]' />
              <field name='[population.csv].[2014]' />
              <field name='[population.csv].[2015]' />
              <field name='[population.csv].[2016]' />
              <field name='[population.csv].[2017]' />
              <field name='[population.csv].[2018]' />
              <field name='[population.csv].[2019]' />
              <field name='[population.csv].[2020]' />
              <field name='[population.csv].[2021]' />
            </group>
          </groups>
          <relation connection='textscan.1luqenc1leb6ot1b2sumg00msbdn' name='population.csv' table='[population#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='it_IT'>
              <column datatype='string' name='Country Name' ordinal='0' />
              <column datatype='integer' name='1960' ordinal='1' />
              <column datatype='integer' name='1961' ordinal='2' />
              <column datatype='integer' name='1962' ordinal='3' />
              <column datatype='integer' name='1963' ordinal='4' />
              <column datatype='integer' name='1964' ordinal='5' />
              <column datatype='integer' name='1965' ordinal='6' />
              <column datatype='integer' name='1966' ordinal='7' />
              <column datatype='integer' name='1967' ordinal='8' />
              <column datatype='integer' name='1968' ordinal='9' />
              <column datatype='integer' name='1969' ordinal='10' />
              <column datatype='integer' name='1970' ordinal='11' />
              <column datatype='integer' name='1971' ordinal='12' />
              <column datatype='integer' name='1972' ordinal='13' />
              <column datatype='integer' name='1973' ordinal='14' />
              <column datatype='integer' name='1974' ordinal='15' />
              <column datatype='integer' name='1975' ordinal='16' />
              <column datatype='integer' name='1976' ordinal='17' />
              <column datatype='integer' name='1977' ordinal='18' />
              <column datatype='integer' name='1978' ordinal='19' />
              <column datatype='integer' name='1979' ordinal='20' />
              <column datatype='integer' name='1980' ordinal='21' />
              <column datatype='integer' name='1981' ordinal='22' />
              <column datatype='integer' name='1982' ordinal='23' />
              <column datatype='integer' name='1983' ordinal='24' />
              <column datatype='integer' name='1984' ordinal='25' />
              <column datatype='integer' name='1985' ordinal='26' />
              <column datatype='integer' name='1986' ordinal='27' />
              <column datatype='integer' name='1987' ordinal='28' />
              <column datatype='integer' name='1988' ordinal='29' />
              <column datatype='integer' name='1989' ordinal='30' />
              <column datatype='integer' name='1990' ordinal='31' />
              <column datatype='integer' name='1991' ordinal='32' />
              <column datatype='integer' name='1992' ordinal='33' />
              <column datatype='integer' name='1993' ordinal='34' />
              <column datatype='integer' name='1994' ordinal='35' />
              <column datatype='integer' name='1995' ordinal='36' />
              <column datatype='integer' name='1996' ordinal='37' />
              <column datatype='integer' name='1997' ordinal='38' />
              <column datatype='integer' name='1998' ordinal='39' />
              <column datatype='integer' name='1999' ordinal='40' />
              <column datatype='integer' name='2000' ordinal='41' />
              <column datatype='integer' name='2001' ordinal='42' />
              <column datatype='integer' name='2002' ordinal='43' />
              <column datatype='integer' name='2003' ordinal='44' />
              <column datatype='integer' name='2004' ordinal='45' />
              <column datatype='integer' name='2005' ordinal='46' />
              <column datatype='integer' name='2006' ordinal='47' />
              <column datatype='integer' name='2007' ordinal='48' />
              <column datatype='integer' name='2008' ordinal='49' />
              <column datatype='integer' name='2009' ordinal='50' />
              <column datatype='integer' name='2010' ordinal='51' />
              <column datatype='integer' name='2011' ordinal='52' />
              <column datatype='integer' name='2012' ordinal='53' />
              <column datatype='integer' name='2013' ordinal='54' />
              <column datatype='integer' name='2014' ordinal='55' />
              <column datatype='integer' name='2015' ordinal='56' />
              <column datatype='integer' name='2016' ordinal='57' />
              <column datatype='integer' name='2017' ordinal='58' />
              <column datatype='integer' name='2018' ordinal='59' />
              <column datatype='integer' name='2019' ordinal='60' />
              <column datatype='integer' name='2020' ordinal='61' />
              <column datatype='integer' name='2021' ordinal='62' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' date-parse-format='yyyy' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[1960]' />
            <value name='[1961]' />
            <value name='[1962]' />
            <value name='[1963]' />
            <value name='[1964]' />
            <value name='[1965]' />
            <value name='[1966]' />
            <value name='[1967]' />
            <value name='[1968]' />
            <value name='[1969]' />
            <value name='[1970]' />
            <value name='[1971]' />
            <value name='[1972]' />
            <value name='[1973]' />
            <value name='[1974]' />
            <value name='[1975]' />
            <value name='[1976]' />
            <value name='[1977]' />
            <value name='[1978]' />
            <value name='[1979]' />
            <value name='[1980]' />
            <value name='[1981]' />
            <value name='[1982]' />
            <value name='[1983]' />
            <value name='[1984]' />
            <value name='[1985]' />
            <value name='[1986]' />
            <value name='[1987]' />
            <value name='[1988]' />
            <value name='[1989]' />
            <value name='[1990]' />
            <value name='[1991]' />
            <value name='[1992]' />
            <value name='[1993]' />
            <value name='[1994]' />
            <value name='[1995]' />
            <value name='[1996]' />
            <value name='[1997]' />
            <value name='[1998]' />
            <value name='[1999]' />
            <value name='[2000]' />
            <value name='[2001]' />
            <value name='[2002]' />
            <value name='[2003]' />
            <value name='[2004]' />
            <value name='[2005]' />
            <value name='[2006]' />
            <value name='[2007]' />
            <value name='[2008]' />
            <value name='[2009]' />
            <value name='[2010]' />
            <value name='[2011]' />
            <value name='[2012]' />
            <value name='[2013]' />
            <value name='[2014]' />
            <value name='[2015]' />
            <value name='[2016]' />
            <value name='[2017]' />
            <value name='[2018]' />
            <value name='[2019]' />
            <value name='[2020]' />
            <value name='[2021]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[population.csv].[1960]' />
              <field name='[population.csv].[1961]' />
              <field name='[population.csv].[1962]' />
              <field name='[population.csv].[1963]' />
              <field name='[population.csv].[1964]' />
              <field name='[population.csv].[1965]' />
              <field name='[population.csv].[1966]' />
              <field name='[population.csv].[1967]' />
              <field name='[population.csv].[1968]' />
              <field name='[population.csv].[1969]' />
              <field name='[population.csv].[1970]' />
              <field name='[population.csv].[1971]' />
              <field name='[population.csv].[1972]' />
              <field name='[population.csv].[1973]' />
              <field name='[population.csv].[1974]' />
              <field name='[population.csv].[1975]' />
              <field name='[population.csv].[1976]' />
              <field name='[population.csv].[1977]' />
              <field name='[population.csv].[1978]' />
              <field name='[population.csv].[1979]' />
              <field name='[population.csv].[1980]' />
              <field name='[population.csv].[1981]' />
              <field name='[population.csv].[1982]' />
              <field name='[population.csv].[1983]' />
              <field name='[population.csv].[1984]' />
              <field name='[population.csv].[1985]' />
              <field name='[population.csv].[1986]' />
              <field name='[population.csv].[1987]' />
              <field name='[population.csv].[1988]' />
              <field name='[population.csv].[1989]' />
              <field name='[population.csv].[1990]' />
              <field name='[population.csv].[1991]' />
              <field name='[population.csv].[1992]' />
              <field name='[population.csv].[1993]' />
              <field name='[population.csv].[1994]' />
              <field name='[population.csv].[1995]' />
              <field name='[population.csv].[1996]' />
              <field name='[population.csv].[1997]' />
              <field name='[population.csv].[1998]' />
              <field name='[population.csv].[1999]' />
              <field name='[population.csv].[2000]' />
              <field name='[population.csv].[2001]' />
              <field name='[population.csv].[2002]' />
              <field name='[population.csv].[2003]' />
              <field name='[population.csv].[2004]' />
              <field name='[population.csv].[2005]' />
              <field name='[population.csv].[2006]' />
              <field name='[population.csv].[2007]' />
              <field name='[population.csv].[2008]' />
              <field name='[population.csv].[2009]' />
              <field name='[population.csv].[2010]' />
              <field name='[population.csv].[2011]' />
              <field name='[population.csv].[2012]' />
              <field name='[population.csv].[2013]' />
              <field name='[population.csv].[2014]' />
              <field name='[population.csv].[2015]' />
              <field name='[population.csv].[2016]' />
              <field name='[population.csv].[2017]' />
              <field name='[population.csv].[2018]' />
              <field name='[population.csv].[2019]' />
              <field name='[population.csv].[2020]' />
              <field name='[population.csv].[2021]' />
            </group>
          </groups>
          <relation connection='textscan.1luqenc1leb6ot1b2sumg00msbdn' name='population.csv' table='[population#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='it_IT'>
              <column datatype='string' name='Country Name' ordinal='0' />
              <column datatype='integer' name='1960' ordinal='1' />
              <column datatype='integer' name='1961' ordinal='2' />
              <column datatype='integer' name='1962' ordinal='3' />
              <column datatype='integer' name='1963' ordinal='4' />
              <column datatype='integer' name='1964' ordinal='5' />
              <column datatype='integer' name='1965' ordinal='6' />
              <column datatype='integer' name='1966' ordinal='7' />
              <column datatype='integer' name='1967' ordinal='8' />
              <column datatype='integer' name='1968' ordinal='9' />
              <column datatype='integer' name='1969' ordinal='10' />
              <column datatype='integer' name='1970' ordinal='11' />
              <column datatype='integer' name='1971' ordinal='12' />
              <column datatype='integer' name='1972' ordinal='13' />
              <column datatype='integer' name='1973' ordinal='14' />
              <column datatype='integer' name='1974' ordinal='15' />
              <column datatype='integer' name='1975' ordinal='16' />
              <column datatype='integer' name='1976' ordinal='17' />
              <column datatype='integer' name='1977' ordinal='18' />
              <column datatype='integer' name='1978' ordinal='19' />
              <column datatype='integer' name='1979' ordinal='20' />
              <column datatype='integer' name='1980' ordinal='21' />
              <column datatype='integer' name='1981' ordinal='22' />
              <column datatype='integer' name='1982' ordinal='23' />
              <column datatype='integer' name='1983' ordinal='24' />
              <column datatype='integer' name='1984' ordinal='25' />
              <column datatype='integer' name='1985' ordinal='26' />
              <column datatype='integer' name='1986' ordinal='27' />
              <column datatype='integer' name='1987' ordinal='28' />
              <column datatype='integer' name='1988' ordinal='29' />
              <column datatype='integer' name='1989' ordinal='30' />
              <column datatype='integer' name='1990' ordinal='31' />
              <column datatype='integer' name='1991' ordinal='32' />
              <column datatype='integer' name='1992' ordinal='33' />
              <column datatype='integer' name='1993' ordinal='34' />
              <column datatype='integer' name='1994' ordinal='35' />
              <column datatype='integer' name='1995' ordinal='36' />
              <column datatype='integer' name='1996' ordinal='37' />
              <column datatype='integer' name='1997' ordinal='38' />
              <column datatype='integer' name='1998' ordinal='39' />
              <column datatype='integer' name='1999' ordinal='40' />
              <column datatype='integer' name='2000' ordinal='41' />
              <column datatype='integer' name='2001' ordinal='42' />
              <column datatype='integer' name='2002' ordinal='43' />
              <column datatype='integer' name='2003' ordinal='44' />
              <column datatype='integer' name='2004' ordinal='45' />
              <column datatype='integer' name='2005' ordinal='46' />
              <column datatype='integer' name='2006' ordinal='47' />
              <column datatype='integer' name='2007' ordinal='48' />
              <column datatype='integer' name='2008' ordinal='49' />
              <column datatype='integer' name='2009' ordinal='50' />
              <column datatype='integer' name='2010' ordinal='51' />
              <column datatype='integer' name='2011' ordinal='52' />
              <column datatype='integer' name='2012' ordinal='53' />
              <column datatype='integer' name='2013' ordinal='54' />
              <column datatype='integer' name='2014' ordinal='55' />
              <column datatype='integer' name='2015' ordinal='56' />
              <column datatype='integer' name='2016' ordinal='57' />
              <column datatype='integer' name='2017' ordinal='58' />
              <column datatype='integer' name='2018' ordinal='59' />
              <column datatype='integer' name='2019' ordinal='60' />
              <column datatype='integer' name='2020' ordinal='61' />
              <column datatype='integer' name='2021' ordinal='62' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[population.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population.csv_3BF395A19BAA47E8926D57113BB9E3AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population.csv_3BF395A19BAA47E8926D57113BB9E3AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population.csv_3BF395A19BAA47E8926D57113BB9E3AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Continent' datatype='string' name='[Calculation_2005298126247424000]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([Country Name] == &quot;Africa Eastern and Southern&quot;&#10;    OR [Country Name] == &quot;Africa Western and Central&quot;&#10;    OR [Country Name] == &quot;Middle East &amp; North Africa&quot;&#10;    OR [Country Name] == &quot;Sub-Saharan Africa&quot;&#10;    OR [Country Name]==  &quot;Europe &amp; Central Asia&quot;&#10;    OR [Country Name] == &quot;Latin America &amp; Caribbean&quot;&#10;    OR [Country Name] == &quot;North America&quot;&#10;    OR [Country Name] == &quot;Pacific island small states&quot;&#10;    OR [Country Name] == &quot;East Asia &amp; Pacific&quot;)&#10;THEN&#10;    [Country Name]&#10;END' />
      </column>
      <column caption='RoW' datatype='real' name='[Calculation_2005298126252769281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Pivot Field Names] : AVG(&#10;    IF [Calculation_2005298126247424000] != &quot;North America&quot; THEN [Pivot Field Values] END&#10;)}' />
      </column>
      <column caption='NA' datatype='integer' name='[Calculation_2005298126253912067]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_2005298126247424000] == &quot;North America&quot; THEN&#10;    [Pivot Field Values]&#10;END' />
      </column>
      <column caption='Difference RoW' datatype='real' name='[Calculation_2005298126257577988]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2005298126252769281] &#10;- &#10;{FIXED : MIN(IF YEAR([Pivot Field Names]) = 1960 THEN [Calculation_2005298126252769281] END) }&#10;)' />
      </column>
      <column caption='Difference NA' datatype='integer' name='[Calculation_2005298126258262021]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2005298126253912067] &#10;- &#10;{FIXED : MIN(IF YEAR([Pivot Field Names]) = 1960 THEN [Calculation_2005298126253912067] END) }&#10;)' />
      </column>
      <column caption='Country' datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
      <column caption='Population' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population.csv' datatype='table' name='[__tableau_internal_object_id__].[population.csv_3BF395A19BAA47E8926D57113BB9E3AB]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2005298126252769281]' derivation='Min' name='[min:Calculation_2005298126252769281:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2005298126253912067]' derivation='Min' name='[min:Calculation_2005298126253912067:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2005298126247424000]' derivation='None' name='[none:Calculation_2005298126247424000:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2005298126252769281]' derivation='Sum' name='[sum:Calculation_2005298126252769281:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2005298126257577988]' derivation='Sum' name='[sum:Calculation_2005298126257577988:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2005298126258262021]' derivation='Sum' name='[sum:Calculation_2005298126258262021:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/angelica/Documents/Repository personale di Tableau/Origini dati/population.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/31/2024 02:57:38 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='population' increment-value='%null%' refresh-type='create' rows-inserted='16492' timestamp-start='2024-05-31 14:57:38.438' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>0</ordinal>
              <family>population.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>326</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LIT_RIT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population.csv_3BF395A19BAA47E8926D57113BB9E3AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>1</ordinal>
              <family>Pivot</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population.csv_3BF395A19BAA47E8926D57113BB9E3AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>2</ordinal>
              <family>Pivot</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15017</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population.csv_3BF395A19BAA47E8926D57113BB9E3AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa Eastern and Southern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa Western and Central&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2005298126247424000:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ebebeb'>
              <bucket>&quot;Africa Eastern and Southern&quot;</bucket>
            </map>
            <map to='#ebebeb'>
              <bucket>&quot;Africa Western and Central&quot;</bucket>
            </map>
            <map to='#ebebeb'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ebebeb'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#ebebeb'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#ebebeb'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#ebebeb'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ebebeb'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.023g0c810by3v312d8yp10dpqc3q]&quot;</bucket>
            </map>
            <map to='#80c11e'>
              <bucket>&quot;[federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126253912067:qk]&quot;</bucket>
            </map>
            <map to='#80c11e'>
              <bucket>&quot;[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126258262021:qk]&quot;</bucket>
            </map>
            <map to='#c0c0c0'>
              <bucket>&quot;[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126257577988:qk]&quot;</bucket>
            </map>
            <map to='#d6d6d6'>
              <bucket>&quot;[federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126252769281:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126252769281:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Italy&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country Name' />
        <field-sort-custom-order field='Calculation_2005298126247424000' />
        <field-sort-custom-order field='Pivot Field Names' />
        <field-sort-custom-order field='Pivot Field Values' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='population.csv' id='population.csv_3BF395A19BAA47E8926D57113BB9E3AB'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy' name='Pivot Field Names' />
                  <column datatype='integer' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[1960]' />
                  <value name='[1961]' />
                  <value name='[1962]' />
                  <value name='[1963]' />
                  <value name='[1964]' />
                  <value name='[1965]' />
                  <value name='[1966]' />
                  <value name='[1967]' />
                  <value name='[1968]' />
                  <value name='[1969]' />
                  <value name='[1970]' />
                  <value name='[1971]' />
                  <value name='[1972]' />
                  <value name='[1973]' />
                  <value name='[1974]' />
                  <value name='[1975]' />
                  <value name='[1976]' />
                  <value name='[1977]' />
                  <value name='[1978]' />
                  <value name='[1979]' />
                  <value name='[1980]' />
                  <value name='[1981]' />
                  <value name='[1982]' />
                  <value name='[1983]' />
                  <value name='[1984]' />
                  <value name='[1985]' />
                  <value name='[1986]' />
                  <value name='[1987]' />
                  <value name='[1988]' />
                  <value name='[1989]' />
                  <value name='[1990]' />
                  <value name='[1991]' />
                  <value name='[1992]' />
                  <value name='[1993]' />
                  <value name='[1994]' />
                  <value name='[1995]' />
                  <value name='[1996]' />
                  <value name='[1997]' />
                  <value name='[1998]' />
                  <value name='[1999]' />
                  <value name='[2000]' />
                  <value name='[2001]' />
                  <value name='[2002]' />
                  <value name='[2003]' />
                  <value name='[2004]' />
                  <value name='[2005]' />
                  <value name='[2006]' />
                  <value name='[2007]' />
                  <value name='[2008]' />
                  <value name='[2009]' />
                  <value name='[2010]' />
                  <value name='[2011]' />
                  <value name='[2012]' />
                  <value name='[2013]' />
                  <value name='[2014]' />
                  <value name='[2015]' />
                  <value name='[2016]' />
                  <value name='[2017]' />
                  <value name='[2018]' />
                  <value name='[2019]' />
                  <value name='[2020]' />
                  <value name='[2021]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[population.csv].[1960]' />
                    <field name='[population.csv].[1961]' />
                    <field name='[population.csv].[1962]' />
                    <field name='[population.csv].[1963]' />
                    <field name='[population.csv].[1964]' />
                    <field name='[population.csv].[1965]' />
                    <field name='[population.csv].[1966]' />
                    <field name='[population.csv].[1967]' />
                    <field name='[population.csv].[1968]' />
                    <field name='[population.csv].[1969]' />
                    <field name='[population.csv].[1970]' />
                    <field name='[population.csv].[1971]' />
                    <field name='[population.csv].[1972]' />
                    <field name='[population.csv].[1973]' />
                    <field name='[population.csv].[1974]' />
                    <field name='[population.csv].[1975]' />
                    <field name='[population.csv].[1976]' />
                    <field name='[population.csv].[1977]' />
                    <field name='[population.csv].[1978]' />
                    <field name='[population.csv].[1979]' />
                    <field name='[population.csv].[1980]' />
                    <field name='[population.csv].[1981]' />
                    <field name='[population.csv].[1982]' />
                    <field name='[population.csv].[1983]' />
                    <field name='[population.csv].[1984]' />
                    <field name='[population.csv].[1985]' />
                    <field name='[population.csv].[1986]' />
                    <field name='[population.csv].[1987]' />
                    <field name='[population.csv].[1988]' />
                    <field name='[population.csv].[1989]' />
                    <field name='[population.csv].[1990]' />
                    <field name='[population.csv].[1991]' />
                    <field name='[population.csv].[1992]' />
                    <field name='[population.csv].[1993]' />
                    <field name='[population.csv].[1994]' />
                    <field name='[population.csv].[1995]' />
                    <field name='[population.csv].[1996]' />
                    <field name='[population.csv].[1997]' />
                    <field name='[population.csv].[1998]' />
                    <field name='[population.csv].[1999]' />
                    <field name='[population.csv].[2000]' />
                    <field name='[population.csv].[2001]' />
                    <field name='[population.csv].[2002]' />
                    <field name='[population.csv].[2003]' />
                    <field name='[population.csv].[2004]' />
                    <field name='[population.csv].[2005]' />
                    <field name='[population.csv].[2006]' />
                    <field name='[population.csv].[2007]' />
                    <field name='[population.csv].[2008]' />
                    <field name='[population.csv].[2009]' />
                    <field name='[population.csv].[2010]' />
                    <field name='[population.csv].[2011]' />
                    <field name='[population.csv].[2012]' />
                    <field name='[population.csv].[2013]' />
                    <field name='[population.csv].[2014]' />
                    <field name='[population.csv].[2015]' />
                    <field name='[population.csv].[2016]' />
                    <field name='[population.csv].[2017]' />
                    <field name='[population.csv].[2018]' />
                    <field name='[population.csv].[2019]' />
                    <field name='[population.csv].[2020]' />
                    <field name='[population.csv].[2021]' />
                  </group>
                </groups>
                <relation connection='textscan.1luqenc1leb6ot1b2sumg00msbdn' name='population.csv' table='[population#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='it_IT'>
                    <column datatype='string' name='Country Name' ordinal='0' />
                    <column datatype='integer' name='1960' ordinal='1' />
                    <column datatype='integer' name='1961' ordinal='2' />
                    <column datatype='integer' name='1962' ordinal='3' />
                    <column datatype='integer' name='1963' ordinal='4' />
                    <column datatype='integer' name='1964' ordinal='5' />
                    <column datatype='integer' name='1965' ordinal='6' />
                    <column datatype='integer' name='1966' ordinal='7' />
                    <column datatype='integer' name='1967' ordinal='8' />
                    <column datatype='integer' name='1968' ordinal='9' />
                    <column datatype='integer' name='1969' ordinal='10' />
                    <column datatype='integer' name='1970' ordinal='11' />
                    <column datatype='integer' name='1971' ordinal='12' />
                    <column datatype='integer' name='1972' ordinal='13' />
                    <column datatype='integer' name='1973' ordinal='14' />
                    <column datatype='integer' name='1974' ordinal='15' />
                    <column datatype='integer' name='1975' ordinal='16' />
                    <column datatype='integer' name='1976' ordinal='17' />
                    <column datatype='integer' name='1977' ordinal='18' />
                    <column datatype='integer' name='1978' ordinal='19' />
                    <column datatype='integer' name='1979' ordinal='20' />
                    <column datatype='integer' name='1980' ordinal='21' />
                    <column datatype='integer' name='1981' ordinal='22' />
                    <column datatype='integer' name='1982' ordinal='23' />
                    <column datatype='integer' name='1983' ordinal='24' />
                    <column datatype='integer' name='1984' ordinal='25' />
                    <column datatype='integer' name='1985' ordinal='26' />
                    <column datatype='integer' name='1986' ordinal='27' />
                    <column datatype='integer' name='1987' ordinal='28' />
                    <column datatype='integer' name='1988' ordinal='29' />
                    <column datatype='integer' name='1989' ordinal='30' />
                    <column datatype='integer' name='1990' ordinal='31' />
                    <column datatype='integer' name='1991' ordinal='32' />
                    <column datatype='integer' name='1992' ordinal='33' />
                    <column datatype='integer' name='1993' ordinal='34' />
                    <column datatype='integer' name='1994' ordinal='35' />
                    <column datatype='integer' name='1995' ordinal='36' />
                    <column datatype='integer' name='1996' ordinal='37' />
                    <column datatype='integer' name='1997' ordinal='38' />
                    <column datatype='integer' name='1998' ordinal='39' />
                    <column datatype='integer' name='1999' ordinal='40' />
                    <column datatype='integer' name='2000' ordinal='41' />
                    <column datatype='integer' name='2001' ordinal='42' />
                    <column datatype='integer' name='2002' ordinal='43' />
                    <column datatype='integer' name='2003' ordinal='44' />
                    <column datatype='integer' name='2004' ordinal='45' />
                    <column datatype='integer' name='2005' ordinal='46' />
                    <column datatype='integer' name='2006' ordinal='47' />
                    <column datatype='integer' name='2007' ordinal='48' />
                    <column datatype='integer' name='2008' ordinal='49' />
                    <column datatype='integer' name='2009' ordinal='50' />
                    <column datatype='integer' name='2010' ordinal='51' />
                    <column datatype='integer' name='2011' ordinal='52' />
                    <column datatype='integer' name='2012' ordinal='53' />
                    <column datatype='integer' name='2013' ordinal='54' />
                    <column datatype='integer' name='2014' ordinal='55' />
                    <column datatype='integer' name='2015' ordinal='56' />
                    <column datatype='integer' name='2016' ordinal='57' />
                    <column datatype='integer' name='2017' ordinal='58' />
                    <column datatype='integer' name='2018' ordinal='59' />
                    <column datatype='integer' name='2019' ordinal='60' />
                    <column datatype='integer' name='2020' ordinal='61' />
                    <column datatype='integer' name='2021' ordinal='62' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CTA'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#80c11e' fontsize='18'>Strategies for population increase in North America</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cta' name='federated.13o23ol0tyy5pw19v20gx0vyhirt' />
          </datasources>
          <datasource-dependencies datasource='federated.13o23ol0tyy5pw19v20gx0vyhirt'>
            <column datatype='integer' name='[Population Increase]' role='measure' type='quantitative' />
            <column datatype='string' name='[Strategy]' role='dimension' type='nominal' />
            <column-instance column='[Strategy]' derivation='None' name='[none:Strategy:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population Increase]' derivation='Sum' name='[sum:Population Increase:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.13o23ol0tyy5pw19v20gx0vyhirt].[none:Strategy:nk]' value='268' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#80c11e' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='574' />
                <format attr='maxwidth' value='574' />
                <format attr='minheight' value='60' />
                <format attr='maxheight' value='60' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13o23ol0tyy5pw19v20gx0vyhirt].[none:Strategy:nk]</rows>
        <cols>[federated.13o23ol0tyy5pw19v20gx0vyhirt].[sum:Population Increase:qk]</cols>
      </table>
      <simple-id uuid='{60E11F30-DE59-4E9F-9069-EA95884EDC38}' />
    </worksheet>
    <worksheet name='Group by Continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.023g0c810by3v312d8yp10dpqc3q' />
          </datasources>
          <datasource-dependencies datasource='federated.023g0c810by3v312d8yp10dpqc3q'>
            <column caption='Continent' datatype='string' name='[Calculation_2005298126247424000]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Country Name] == &quot;Africa Eastern and Southern&quot;&#10;    OR [Country Name] == &quot;Africa Western and Central&quot;&#10;    OR [Country Name] == &quot;Middle East &amp; North Africa&quot;&#10;    OR [Country Name] == &quot;Sub-Saharan Africa&quot;&#10;    OR [Country Name]==  &quot;Europe &amp; Central Asia&quot;&#10;    OR [Country Name] == &quot;Latin America &amp; Caribbean&quot;&#10;    OR [Country Name] == &quot;North America&quot;&#10;    OR [Country Name] == &quot;Pacific island small states&quot;&#10;    OR [Country Name] == &quot;East Asia &amp; Pacific&quot;)&#10;THEN&#10;    [Country Name]&#10;END' />
            </column>
            <column caption='Country' datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Population' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005298126247424000]' derivation='None' name='[none:Calculation_2005298126247424000:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.023g0c810by3v312d8yp10dpqc3q].[none:Calculation_2005298126247424000:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2005298126247424000:nk]' />
              <groupfilter function='member' level='[none:Calculation_2005298126247424000:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.023g0c810by3v312d8yp10dpqc3q].[none:Calculation_2005298126247424000:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023g0c810by3v312d8yp10dpqc3q].[none:Calculation_2005298126247424000:nk]' />
              <text column='[federated.023g0c810by3v312d8yp10dpqc3q].[none:Calculation_2005298126247424000:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Pivot Field Values:qk]</rows>
        <cols>[federated.023g0c810by3v312d8yp10dpqc3q].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{CC7738A2-D886-48EA-A5FA-664CE1AAFF0C}' />
    </worksheet>
    <worksheet name='Information'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.023g0c810by3v312d8yp10dpqc3q' />
          </datasources>
          <datasource-dependencies datasource='federated.023g0c810by3v312d8yp10dpqc3q'>
            <column caption='Continent' datatype='string' name='[Calculation_2005298126247424000]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Country Name] == &quot;Africa Eastern and Southern&quot;&#10;    OR [Country Name] == &quot;Africa Western and Central&quot;&#10;    OR [Country Name] == &quot;Middle East &amp; North Africa&quot;&#10;    OR [Country Name] == &quot;Sub-Saharan Africa&quot;&#10;    OR [Country Name]==  &quot;Europe &amp; Central Asia&quot;&#10;    OR [Country Name] == &quot;Latin America &amp; Caribbean&quot;&#10;    OR [Country Name] == &quot;North America&quot;&#10;    OR [Country Name] == &quot;Pacific island small states&quot;&#10;    OR [Country Name] == &quot;East Asia &amp; Pacific&quot;)&#10;THEN&#10;    [Country Name]&#10;END' />
            </column>
            <column caption='RoW' datatype='real' name='[Calculation_2005298126252769281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Pivot Field Names] : AVG(&#10;    IF [Calculation_2005298126247424000] != &quot;North America&quot; THEN [Pivot Field Values] END&#10;)}' />
            </column>
            <column caption='NA' datatype='integer' name='[Calculation_2005298126253912067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_2005298126247424000] == &quot;North America&quot; THEN&#10;    [Pivot Field Values]&#10;END' />
            </column>
            <column caption='Difference RoW' datatype='real' name='[Calculation_2005298126257577988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2005298126252769281] &#10;- &#10;{FIXED : MIN(IF YEAR([Pivot Field Names]) = 1960 THEN [Calculation_2005298126252769281] END) }&#10;)' />
            </column>
            <column caption='Difference NA' datatype='integer' name='[Calculation_2005298126258262021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2005298126253912067] &#10;- &#10;{FIXED : MIN(IF YEAR([Pivot Field Names]) = 1960 THEN [Calculation_2005298126253912067] END) }&#10;)' />
            </column>
            <column caption='Country' datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Population' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005298126257577988]' derivation='Sum' name='[sum:Calculation_2005298126257577988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2005298126258262021]' derivation='Sum' name='[sum:Calculation_2005298126258262021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year-Trunc' name='[tyr:Pivot Field Names:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126257577988:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126257577988:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[tyr:Pivot Field Names:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126258262021:qk]' scope='rows' value='Difference from 1960' />
            <encoding attr='space' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[tyr:Pivot Field Names:qk]' field-type='quantitative' min='#1960-01-01 00:00:00#' range-type='fixedmin' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126258262021:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
              <text column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>North America</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126258262021:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
              <text column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>North America</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126257577988:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
              <text column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Rest of the World</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126258262021:qk] + [federated.023g0c810by3v312d8yp10dpqc3q].[sum:Calculation_2005298126257577988:qk])</rows>
        <cols>[federated.023g0c810by3v312d8yp10dpqc3q].[tyr:Pivot Field Names:qk]</cols>
      </table>
      <simple-id uuid='{B710C6A6-3499-4656-845E-34895FE021DF}' />
    </worksheet>
    <worksheet name='NA vs RoW'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#80c11e' fontsize='26'>Population in North America over the last 50 years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.023g0c810by3v312d8yp10dpqc3q' />
          </datasources>
          <datasource-dependencies datasource='federated.023g0c810by3v312d8yp10dpqc3q'>
            <column caption='Continent' datatype='string' name='[Calculation_2005298126247424000]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Country Name] == &quot;Africa Eastern and Southern&quot;&#10;    OR [Country Name] == &quot;Africa Western and Central&quot;&#10;    OR [Country Name] == &quot;Middle East &amp; North Africa&quot;&#10;    OR [Country Name] == &quot;Sub-Saharan Africa&quot;&#10;    OR [Country Name]==  &quot;Europe &amp; Central Asia&quot;&#10;    OR [Country Name] == &quot;Latin America &amp; Caribbean&quot;&#10;    OR [Country Name] == &quot;North America&quot;&#10;    OR [Country Name] == &quot;Pacific island small states&quot;&#10;    OR [Country Name] == &quot;East Asia &amp; Pacific&quot;)&#10;THEN&#10;    [Country Name]&#10;END' />
            </column>
            <column caption='RoW' datatype='real' name='[Calculation_2005298126252769281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Pivot Field Names] : AVG(&#10;    IF [Calculation_2005298126247424000] != &quot;North America&quot; THEN [Pivot Field Values] END&#10;)}' />
            </column>
            <column caption='NA' datatype='integer' name='[Calculation_2005298126253912067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_2005298126247424000] == &quot;North America&quot; THEN&#10;    [Pivot Field Values]&#10;END' />
            </column>
            <column caption='Country' datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Population' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005298126252769281]' derivation='Min' name='[min:Calculation_2005298126252769281:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2005298126253912067]' derivation='Min' name='[min:Calculation_2005298126253912067:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year-Trunc' name='[tyr:Pivot Field Names:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126253912067:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126253912067:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126252769281:qk]' scope='rows' value='Population' />
            <format attr='title' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[tyr:Pivot Field Names:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.023g0c810by3v312d8yp10dpqc3q].[tyr:Pivot Field Names:qk]' field-type='quantitative' min='#1960-01-01 00:00:00#' range-type='fixedmin' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
              <text column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126252769281:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
              <text column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Rest of the World</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126253912067:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
              <text column='[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>North America</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126252769281:qk] + [federated.023g0c810by3v312d8yp10dpqc3q].[min:Calculation_2005298126253912067:qk])</rows>
        <cols>[federated.023g0c810by3v312d8yp10dpqc3q].[tyr:Pivot Field Names:qk]</cols>
      </table>
      <simple-id uuid='{244063B0-2B4F-427E-B0FB-50C3B72DBA84}' />
    </worksheet>
    <worksheet name='Raw Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.023g0c810by3v312d8yp10dpqc3q' />
          </datasources>
          <datasource-dependencies datasource='federated.023g0c810by3v312d8yp10dpqc3q'>
            <column caption='Country' datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Population' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year-Trunc' name='[tyr:Pivot Field Names:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023g0c810by3v312d8yp10dpqc3q].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Pivot Field Values:qk]</rows>
        <cols>[federated.023g0c810by3v312d8yp10dpqc3q].[tyr:Pivot Field Names:qk]</cols>
      </table>
      <simple-id uuid='{65A88A1F-2F70-4A56-A191-0B9B449DC7D1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Knowledge'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='53875' id='17' name='Information' w='70400' x='29000' y='12750' />
        <zone h='25875' id='9' type-v2='empty' w='400' x='96100' y='18625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='9375' id='10' type-v2='text' w='19300' x='78000' y='31250'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='36'>367 M</run>
          </formatted-text>
        </zone>
        <zone h='15625' id='18' type-v2='text' w='23900' x='2900' y='15125'>
          <formatted-text>
            <run fontcolor='#80c11e' fontsize='14'>Why this gap?</run>
            <run>Ã†&#10;&#10;</run>
            <run fontcolor='#000000' fontsize='14'>1. Lower fertility rate</run>
            <run>Ã†&#10;</run>
            <run fontcolor='#000000' fontsize='14'>2. Lower immigration rate</run>
            <run>Ã†&#10;</run>
            <run fontcolor='#000000' fontsize='14'>3. Higher average age</run>
          </formatted-text>
        </zone>
        <zone h='11625' id='21' type-v2='text' w='92400' x='2100' y='1125'>
          <formatted-text>
            <run bold='true' fontcolor='#80c11e' fontname='Tableau Light' fontsize='26'>Population in North America over the last 50 years</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='11625' id='21' type-v2='text' w='92400' x='2100' y='1125'>
                  <formatted-text>
                    <run bold='true' fontcolor='#80c11e' fontname='Tableau Light' fontsize='26'>Population in North America over the last 50 years</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53875' id='17' is-fixed='true' name='Information' w='70400' x='29000' y='12750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15625' id='18' type-v2='text' w='23900' x='2900' y='15125'>
                  <formatted-text>
                    <run fontcolor='#80c11e' fontsize='14'>Why this gap?</run>
                    <run>Ã†&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='14'>1. Lower fertility rate</run>
                    <run>Ã†&#10;</run>
                    <run fontcolor='#000000' fontsize='14'>2. Lower immigration rate</run>
                    <run>Ã†&#10;</run>
                    <run fontcolor='#000000' fontsize='14'>3. Higher average age</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9375' id='10' type-v2='text' w='19300' x='78000' y='31250'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='36'>367 M</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6FC03A6D-F4EF-4457-9042-8D9F1BE3329A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Wisdom'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='53875' id='17' name='Information' w='70400' x='29000' y='12750' />
        <zone h='25875' id='9' type-v2='empty' w='400' x='96100' y='18625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='9375' id='10' type-v2='text' w='19300' x='78000' y='31250'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='36'>367 M</run>
          </formatted-text>
        </zone>
        <zone h='15625' id='18' type-v2='text' w='23900' x='2900' y='15125'>
          <formatted-text>
            <run fontcolor='#80c11e' fontsize='14'>Why this gap?</run>
            <run>Ã†&#10;&#10;</run>
            <run fontcolor='#000000' fontsize='14'>1. Lower fertility rate</run>
            <run>Ã†&#10;</run>
            <run fontcolor='#000000' fontsize='14'>2. Lower immigration rate</run>
            <run>Ã†&#10;</run>
            <run fontcolor='#000000' fontsize='14'>3. Higher average age</run>
          </formatted-text>
        </zone>
        <zone h='11625' id='21' type-v2='text' w='92400' x='2100' y='1125'>
          <formatted-text>
            <run bold='true' fontcolor='#80c11e' fontname='Tableau Light' fontsize='26'>Population in North America over the last 50 years</run>
          </formatted-text>
        </zone>
        <zone h='24875' id='24' name='CTA' w='97300' x='1900' y='68500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='11625' id='21' type-v2='text' w='92400' x='2100' y='1125'>
                  <formatted-text>
                    <run bold='true' fontcolor='#80c11e' fontname='Tableau Light' fontsize='26'>Population in North America over the last 50 years</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53875' id='17' is-fixed='true' name='Information' w='70400' x='29000' y='12750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15625' id='18' type-v2='text' w='23900' x='2900' y='15125'>
                  <formatted-text>
                    <run fontcolor='#80c11e' fontsize='14'>Why this gap?</run>
                    <run>Ã†&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='14'>1. Lower fertility rate</run>
                    <run>Ã†&#10;</run>
                    <run fontcolor='#000000' fontsize='14'>2. Lower immigration rate</run>
                    <run>Ã†&#10;</run>
                    <run fontcolor='#000000' fontsize='14'>3. Higher average age</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9375' id='10' type-v2='text' w='19300' x='78000' y='31250'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='36'>367 M</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='199' h='24875' id='24' is-fixed='true' name='CTA' w='97300' x='1900' y='68500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{974DEB38-7C62-40B3-BF14-6B1EC0CB5FD0}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Raw Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.023g0c810by3v312d8yp10dpqc3q].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[none:Calculation_2005298126247424000:nk]</field>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[none:Country Name:nk]</field>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21435026-E27F-47CF-9429-BE94A3EE2834}' />
    </window>
    <window class='worksheet' name='Group by Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.023g0c810by3v312d8yp10dpqc3q].[none:Calculation_2005298126247424000:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.023g0c810by3v312d8yp10dpqc3q].[yr:Pivot Field Names:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Pivot Field Values:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.023g0c810by3v312d8yp10dpqc3q].[none:Calculation_2005298126247424000:nk]</field>
                  <field>[federated.023g0c810by3v312d8yp10dpqc3q].[sum:Pivot Field Values:qk]</field>
                  <field>[federated.023g0c810by3v312d8yp10dpqc3q].[yr:Pivot Field Names:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;North America&quot;</value>
                <value>363967201</value>
                <value>2018</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[none:Calculation_2005298126247424000:nk]</field>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFB2520D-B379-43C5-91AA-6F1FA49E35C4}' />
    </window>
    <window class='worksheet' name='NA vs RoW'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]</field>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9785B019-6CC1-46DA-A672-19980B15B28A}' />
    </window>
    <window class='worksheet' name='Information'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[:Measure Names]</field>
            <field>[federated.023g0c810by3v312d8yp10dpqc3q].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2995E32F-8D93-42FD-9E79-F150D1FA0B8F}' />
    </window>
    <window class='dashboard' name='Knowledge'>
      <viewpoints>
        <viewpoint name='Information'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0C7AA8EC-4024-4E1F-8E9B-27B52045AE5D}' />
    </window>
    <window class='worksheet' name='CTA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13o23ol0tyy5pw19v20gx0vyhirt].[none:Strategy:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09BF3B26-8B1C-41F2-A131-14FB0A5DA444}' />
    </window>
    <window class='dashboard' maximized='true' name='Wisdom'>
      <viewpoints>
        <viewpoint name='CTA' />
        <viewpoint name='Information'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E3FDD545-25E3-4921-80CA-003CDB24333F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='278' name='CTA' width='384'>
      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
      kaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJ
      igFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAY
      AEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFA
      RCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAERE
      gmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQo
      BgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIA
      EBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgAR
      kaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJ
      igFARCQoBgARkaAYAEREgmIAEBEJigFARCQoBgARkaAYAEREgmIAEBEJigFARE1WTOoAAAAd
      SURBVCQoBgARkaAYAEREgmIAEBEJigFARCSo/wP/ZWs8EvI41gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Group by Continent' width='384'>
      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
      +QYGBqSnT59OeL5EIiFpfhSQ9P9PHErX19eHqqoq1VZOtjM/x8bGMDQ0lHJd73TZbo4iSRJ6
      enoyLuuaLJFIZO20e/z4sepIkFzr2N/fj9LSUtVWTjQazeiY8vl8GBgYUL2WUDwez+hgltdR
      vqhcNrmuGNrT04MlSdc7zyZbZ5/b7YZOp1NtdWZbx2g0iv7+fqxYsSLnfGrbv7GxMed80739
      e3p6JrX9XS4X7Ha76tDDbJ+N3++H2+1WvZDcdG//3t5eNDY2qrZyc23/mpoa1RZ5tnWMxWLo
      6+tLuehaupnYx/MNP862joODg7BYLKrnV2RbR1EUOQw0HA7jpz/9acbO3Nvbm3JN92x+85vf
      ZAz79Pv9eS+ydvbsWfT396ec9CVJ+e8I9eTJE+zfvz/jjL+nT5+qzhePx/GTn/wEzc3NKYeX
      vb29qgEHAP7v//4PNpstZacMh8N5rwlz+fJl3Lt3L2WnlP7/GcVqBgcH8bvf/Q5Lly5NmV7I
      2dU/+clPsHTp0pSSxpMnT1BXV6c63/79+zPKNolEIu+Q1d/+9rcoKSlJ+WwCgUDeK6XKN9ZJ
      HmaYK0gnc7vd2LdvX8br5xuRlUgksm7/vr4+1QQHAB9++GHGiVSRSCTvxQevXLmCu3fvppwQ
      JWW550W6oaEhfPDBB5Pa/j/96U/R1PT/pogS/7AKAB/YvHkzys56BgZImBEaV7927RrDmTNn
      GCQlJVHEP3z4gFffhw8fGJYtW4ZRTjx79ozB0tISr96FCxcySEtLo1T2b968YbCyssKrD3aR
      EHJj7////wwAXjaod/E0jwgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Information' width='384'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Knowledge' width='384'>
      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
      ktFolN566y3pF7/4hfTnP/9ZKi4udn3H4cOHpenTp0tHjx6V6uvrO103Ly9PmjRpkjRnzhwp
      JydH0ul00uTJk6WjR49Kx48flyRJkq699lpXme3/3717t/SPf/xDMhqN0lNPPSW988470tGj
      RyWj0ShlZ2dLZrNZkiRJuummmySdTuda/9S6NjU1SV999ZVUXV0t/e9//5OefPJJqaamRpo5
      c6a0f/9+KT8/v8vtFtw1Nzf3dRUE4aLRp8NA16xZw0MPPURISAjTp0/nzTffRJIk0tPTKSgo
      YP369bz88susXbsWlUrFiBEjkCQJnU6HJEkcOXKE1NRU9u/fD8CoUaN48kn3l8ukpaXh5+dH
      enp6l+uGhIQgl8tZsmQJXl5tu0Sr1ZKefvqX1Lfz9fUlKiqKmJgY1zrz589n6dKlzJ49G5PJ
      RHx8vNs6p9ZVpVLx3//+l6amJurr6wkLCyMgIIC0tDTUanWXdR83btw5739BEPq3C/I5gJkz
      Z7Ju3ToqKyuZMmUK7733HuvXr3e14ZtMJkpKSgC4/PLLSUhI4ODBg906GXa2rtFoZOzYsa6T
      f2+49dZbuf7667Hb7Vx//fUd5p9c1zVr1rB27Vr+8pe/4OXlxcMPP9ztuguCIJyrHncC6/V6
      iouLqauro7KykuLiYpxOJ999952r7budw+Hg0KFDHDp0iNLSUq655hr+/e9/09TUxKZNm9Bo
      NMjlciZNmsRnn31GbGwsMpmMsLAwNm7cyNixY5HJZKSlpREcHMz06dPx9vamtbW1W3U9m3VN
      JhPHjh2jpqamW2VHRESwZcsWGhoaMJlMBAQEkJ6ezmuvvcavfnX6l8i3P/EaGBjI4sWL3cr8
      4YcfqKqq6tF2C4IgdEbx97///e89KeDHH39k9erVyOVy6uvr2b9/P9nZ2ZSWlqLRaIiKinIt
      a7FY2L59O4cPH8ZoNDJ58mTCwsJ46aWX0Ov1PP/886hUKpRKJQ6Hg1mzZhEaGkpMTAwxMTEM
      HToUgGnTprF69Wq+/vprIiIiuOKKK1AoFMTExBAU1PFdvnK5nMzMzNOuq9FoXKkFADIzM/nP
      f/5DY2MjI0eOBCArK8s1PysrC5lMhp+fH4mJiaSmprJnzx6WLVvGqFGjCAgIQKvVUl9f32kA
      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
      BYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIA
      iIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCI
      iKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgY
      SgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEU
      ACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEg
      ImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIi
      hlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIo
      BYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIA
      iIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgY6v8BILGtaudU
      aIwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='NA vs RoW' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Raw Chart' width='384'>
      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
      iYjItZl2AOTzeX70ox9xzz33sGLFiosq6PLycr7zne9w5swZampqqKiooKqqimeffZa2tjZm
      zZpFWVkZhw8fZsmSJdxzzz10dXWxdetWFi1axNjYGAC+7+O67mUrf5is8C+s9C8MAxERuTrT
      bgLauXMnq1atoqmpiXw+TxAEjI6OMjw8DIDrutx22210dnayfPlywjAkmUyycuVKent7WbJk
      CWEYMjExged5TExMEAQBdXV1HDt2jHw+z549e1iyZAnGGNra2jDG0NvbSy6Xu2kHQEQkrqZ9
      BVBcXExnZyc9PT0ArF+/ng8//JDVq1dTVlbGpk2bKBQKzJs3jzVr1hBFEVu2bGF8fJy5c+ey
      fv16ADZv3swvf/lLUqkUjz32GCUlJaxbt45f/OIX1NTUsHbtWowxHD16lLq6Otra2qivr6eo
      qOjmHAERkZiyjDHmWj7oeR67d+/mvvvuu2KTzc0WBAGuO+0MExGRC1xzANwKFAAiItdOI4FF
      RGJKASAiElMKABGRmFIAiIjElAJARCSmFAAiIjGlABARiSkFgIhITCkARERiSgEgIhJTCgAR
      kZhSAIiIxJQCQEQkphQAIiIxpQAQEYkpBYCISEwpAEREYkoBICISUwoAEZGYUgCIiMSUAkBE
      JKYUACIiMaUAEBGJKQWAiEhMKQBERGJKASAiElMKABGRmFIAiIjElAJARCSmFAAiIjHlTndF
      Ywytra3s27ePb33rWySTyYuW7dixg/b2dkpKSnjsscdIJBLs3r2b06dPU1JSwuOPP04qleKt
      t95iYmICy7JYs2YNjY2NbN68md7eXmpqanj44YdxHOem7KyIiHxi2lcALS0tHD58mLGxMaIo
      umhZZ2cnAwMDfPe732XevHns3LmTrq4u+vr6eP7552lsbGTbtm0YY+jt7eWJJ57g8ccfp7Gx
      kcOHD5NKpXj++edxHIePP/74hu+kiIhcatoBsHDhQp566imKioouWTYyMsLs2bNxHIc1a9bQ
      3t7O6Ogo1dXVuK7L8uXLOXv2LOPj44RhyODgIFEU4TgOIyMj1NbW4rouGzZsoLm5+YplMMYQ
      RdHUS0RErt20m4Asy7rissWLF/PDH/6QgYEB8vk8o6OjNDU1sWvXLgYHB8nlcoyMjOC6LsuW
      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
    </thumbnail>
    <thumbnail height='384' name='Wisdom' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3hb1f348bcky7Jky3vvnTh29sKBJBCySJq0kMFIKIXSUkZZpRQKhdIf
      q4UyChS+EKCMQIAMIHuwM509nDjeSryHPCTZ2vf3h2MRxXbixFacxOf1PHme6I6jc6+v7ufe
      c879XJkkSRKCIAhCvyPv6woIgiAIfUMEAEEQhH5KBABBEIR+SgQAQRCEfkoEAEEQhH5KBABB
      EIR+SgQAQRCEfkoEAEEQhH5KBABBEIR+SgQAQRCEfkoEAEEQhH5KBABBEIR+SgQAQRCEfkoE
      AEEQhH5KBABBEIR+SgQAQRCEfkoEAEEQhH5KBABBEIR+SgQAQRCEfkoEAEEQhH7qkg4ArbZG
      TLb6vq6GcBZsjlaM1locTmtfV0W4gFjsRozWWpySwyPlWx0tJ447u0fKv1B5nctK5Yb9lDXv
      dX2WyxT4eYcS5z8KP++wXqtcT32SexsNrcd4KHtXr5Zb31rK2sK/EaZJZ1rK33q17NNZU/gE
      +tYSZqU9T4BPTI/KqjLmomvaCcDg8NlolMFu84837abCeJBhkfNQKXx79F1nY1/1F6wp/Bu3
      DFlCYmD2OZVR1ryXw3VrAEgLupKkoMt7s4q95vPDf8DqMHFj5nso5Mq+rs4F7Tvdv9lR/h4P
      js1Bq4ro9fK3lb3D97qXuGPEGiL9Mnu9/LNV0riVGlN+p/Myw36Bn3eo67PVYSKn4kOONe1A
      LvMiLXgSwyPnI5ed+fR+TgGgqOFHvit9scN0uUzBZTG3MznpUWQy2bkUfcE4WPM128reZnb6
      C0T6ZbjNs9qNFDX8iM3Rel7rVNa8h0rjQazOlh6XVdK4jQ3F/w+AZksFU5L/6jb/qH4jW46/
      ycDQqb0eAHLKP2Bf9RfckLkIf1Vkr5YNkFPxAYdqvgSg1pR/wQaAksatmO1NSDj7uioXhI3F
      z6Jr2sHtw7/q66r0ugrDQVYVPMrlcXeSGTbzjMtvLXubQv13nc6L8x/hCgCttibe3z+X2pZ8
      1F5BOCUbR+s3cqRubbcuLM4pALSblfY8sf4jcUp26lqK+PHYf9ha9n8EqxMYGbWgJ0X3OZOt
      jkrjQWxOU4d5EX4ZPHr5YWTnuQXt1qFfIOFEKVf3Wpn+3lHsrPiIcXF34KsM6bVyT8dgraLS
      eNAjzTwOp40C/bdkhs1CJpNzuHYNFrsRlZdfr39XTz0wdjsgoZB593VVLggNZh0VxoN9XQ2P
      sDpMVBoP0tLNJml9SwlBPvHckPluh3lBPvGu/39b+gK1LflcmfAgE+L/iEOysSr/UfbXLGNX
      5ceMjbn1tN/TowAQ4BNLuG86AJF+g4gPGMUrO8ZxsOYrtwDgcFopaPie+pZi1F4BpAZf1eHK
      r6H1GA7JRqgmhWpTHhWG/WiUIaQEjcdLrnIt12LTY7TWEugTh7dC45rebKnEbG8mTJOGTHb6
      E7PRWkuF4QCt9kZUCi1x/iPwPRFRJclJbUsBRkuNq14qhRYAP+8wV1NJo7kMHy9/lAr3k3GL
      TU+B/luM1joCfWJJC57kVs/28n28/PFXRaFv1XG8eRcyFKQFX4VaGdBlvVtsDVgcBsI06a5p
      +lYdTslOqCaFVlsjJY1bsDiMJARcRrA64bT7AeDKxAf5Ov9hth1/m8nJj55xeUmS0DVtp8J4
      CC+ZkqTAywnzTXNbxmCpptXeSKgmBbnMC5O1jhrTUWL8h9NoPu7ql6lrLcbmbLuL8ldF4ePl
      71aOU7Kja8qhoVVHkDqexIBxZ7yz1DXtwGxvIj1kMjJkHKz5ksKG78kM+4Xbco3mMqyOFsJ9
      02kyl6Nr2gHITvwNArE7rZQ2bqPZUkGEXwYx2mEdvqvBfJwi/Q9YnS1E+w0mIeAyt/p1tR/i
      A8agkCtPtGm3/e1O3ceVxoNUm47gJVcR5z+awJOa/OxOKxWGAzRZygAZYZq0E3epp983TslB
      ScMWqk1HUCo0pARNcDtGmiyVWOzNhKiTO1w51rUUIUNOiCbJNa3ZUkWB/jss9mYifDNIDrrC
      7bdnstZhstUTrE7ES66i1dZIlekwMdphbr8Ji91Ik6Ucs90IkkSN6ahrXpBPfIffmM1hprRp
      K82WaiL9BhGjHdphW5ssFRTqv8NiNxLpl0lS4OXn1Cphc7RSbthHs6UKucyLSL8MQjWpHZYz
      25s53rwbs70ZX2Uw0dqhruO5vqWYBvNxAAyWGtf2tZ8DTuVw2mi0HCclaKLr/NpV3fZXLyNM
      k86E+HuRyWR4yVTMSPt/5NVv6DIANFuqMNubCPSJ61kAOJW/KgqtdzjNlkrXtIbWY3ySeyt1
      LYWuaV5yFTNS/x/DI693TVtx9AHqWgpJCZrAodqvXdND1MncPGQxAapoAPZXL2ND8dPcOnQp
      8QGjXct9U/JPDtSs4LEr8vGS/RwwTrWm8Al2VnwISK5pCpk3vxzwAoPDf4XNaebN3VPd6tVu
      SvJjjIv9PTZHC2/unsrQiLn8asC/XfPz679hed59WBwG1zStdyQ3Zr5LlDYLAIdk483dU0kM
      yMbHS0te/Yaf9593FHeMXNOhPb7dxpJnya1dyeNXFLiuGpfn3Uej+ThDwq9lZ+WH2J2WE9uk
      5ObBi0kIHNvlvgCI8B1IRug17Kz8kHFxd3T53dD2Q/388B0UN24+aaqM7NjfMSXpr64f2E/H
      X2dnxYc8dNluSpu2syLvQRyShduHf8Wivb90rfnJoVtc/7924KsMCf+V6/ORunV8lf9nGk/8
      cADGRt/K9NS/n3Z78urXI5cpSA26EplMhlzmRV7dhg4BYE3h3yhu+Ims8F9yoHq5qxkmQBXD
      FXF38+Ox/2CwVrmWn5n6DKOiF7o+7yh/jw3FzwBt+9rmbGVQ6Ayuy3gNxYm21672w5+z96GR
      B7Es748YLNU8eNkOV7kttgaWHrmbksYtJ+1hObcP/5po7WBKG7exJPd3bscYwICQKcwb9Jbr
      u09lstWz5NBvKTP83HcnQ8FViQ8yPv4eAHJrV7Kx+BluyFzEgJApP69rree/uyaTGTaLORn/
      Adp+h6sKHsXhtKNUqLA6WkgOHM8NmYtQKnwA2Fn5ET/oXuGukZtoslTwxZE7sTpM3D3qW7eg
      d6x5J58c+o3r88m/v9uHf+12gs+p+IA9VZ/SYtO7pl2T+g/GRP98LO2p/JQ1hU8g4UAhU2Fz
      tpAWPIn5g/4PL3n377Zya1fz1dE/uS5S2o2IvJFfpD3nOt7blnsI20lNswqZN/MGvcmAkMl8
      knsr+tZSAH46/ho/HX8NgCHh13LtwFc6fG+D+RhOyUGIOvm09aswHMDmbGFAyFS34Oat8CU5
      8HKO1K/DZK1zXdy2K2r4ka/z/8ykxD/3bgCwOkyYbHoiTrSZS5KTL47cRUPrMWanv8DAkKk0
      mo/zdcFfWJn/KBG+GURrh7jWN9sNqLy03DZ0GSovLbsrF5NT8QFrC5/ghsxFvVJHGXKmpTxB
      UuA4fJUhVJvy+DLvAVYXPMbAkOl4yVUsyPqAvPoN7K5czNTkxwnTtF3hhpxypXayJnM5S4/c
      g693CDdmvUu4ZiC6pu18lf8QSw7fzj2jvnO7kjnWvItBode0tYN7R7Kl7C1ya1eRV7eeEVE3
      ntU2mWx1VBgPMDP1GSL8Mihq+IlvSp5nd9UnZwwAABMT7uVI3Vq2lb3D1Ul/6XK5dUVPUdy4
      mQnx9zE6+masDhMbip9hW9nbhGvSGRY5z235SuMhVuQ9gL8qksTAbAJ94liQ1db+n1u7il+m
      v+gaNBDh697Pkle/gRGR15McNB6rw8SKvAfYVfkxU5If67JdU5Ik8uo2EOc/2nUnFe8/hkL9
      dzictg7rOSQbFruBeYP+S6Aqls3H3+Rw3Wq2HP8vY2N+Q2LgOBrNx1medx+7Kxe7AsDxpl2s
      K/oHmWEzmZX2T5QKNdvL3mVjyTPEV4zpcNV16n44+Y7Wrf5ILD1yDyWNW5kYfx/DIufhkOwc
      qV3rOnFZHEaGRsxhYOg0QtUpWBxGvi19gSN1a8mt+ZohEdd1WvbXRx+m3LCPKcmPMTRiDi1W
      PWuLnuDb0heI8B1IeshkBoXOYGPxMxyt3+gWAPL1m5Bwutqua035fJ3/MEmBl3PdwFdRewWy
      r/oLvs7/M5uP/5erEh90++761hJWHL0fH4WWQaEz8PFyv8uN1g5hQdYH/HjsNcqa93BT1vuu
      eSHqJLdlj9Zv4Iq4u0kIGE2D+Tgr8h4gp/x/rgBQZcxlVcFjpAVfxbUDX0KlaDuPrC58nG1l
      7zA+/u5O909nrA4TY2J+Q3rw1QSpE2ix1rOu+Cn2VH1KVtgskoIux+G0sTL/EQJ8orl2wMsE
      +sTSZK4gr369q4lzdvq/KGvey6aS5xgd/WvSg68GQOvdeWe2vrUEgGrTEb4p+Rdech+CfOJI
      CRrvdjLXm0sBCNV0DBQhmhSoB31raYcAkBU2iw3FT7O36vPeCwBGax3riv6OQ7IyMGQaALqm
      HCqNB5kQfy/DI+cDoFYGMi/jTV7feSU7yt/n2oEvu8rw9Q7hF2nPuj5PT3mKKuNh8uu/wWxv
      7tBEcC6uSf2722c/7zBGR/+a73T/pq6lgCjtYFKDr6SutRiAWP/hxPmPOmO5u6s+xeZs4VcD
      /kdCQNtJd2DoNFpselYWPMLhujUMjZjjWj4rbJbbto+JvoXc2lW02pvOepv8VdH8Zujnrs+R
      voP4rvRFWm2N3Vo/wjeDjNDp5FR8QHbs7zq9C2ix6TlQs4z04Mkn/cDDmDPwNf6z8wq2ly/q
      EABWFjzCiKgbmZb8N9fJNzX4yhPNLZAQMJYgdTyduXbAS26jgJKDxnOwZgU2Z2uXAaDCeACD
      tYrLYn/rmpYecjWlTVvRNW0nOWi82/Jech+uz3zb9XlE1I0crlvN5fF3MepEE2aMdig/6F7F
      4jC6lttZ+RFecm9+kfacq28hO/Z37K3+jH3VSzsEgM72Q2fKmvdQ0riZ0dG3cOVJJ9Er4u9y
      /X9AyBS3k7OWCKan/J0jdWspM+ztNADoW0vJ129iWMR8xsX+HgBfZQjzMt7ilZxstpW/S3rI
      ZAJ9YonWDiW/fhNOyYFcpgDgaP1GvBW+pARPBNqOdafkYHb6P9EogwAYHjmffVVfsL/6iw4B
      YG3REwwImXIiWPp0qJ+vMoTU4CvZU/UpyGSkBl/Z5T66efBi1yigaO1QtpW9Q6O5zDV/V+Vi
      AGan/9MVaEZF38ze6ra6nU0AaD9ntdN6hzMl6VHe2TubMsNekoIux+IwYnE0k+k/w3Uxq1EG
      u+74oe04l6S2FocwTdpptw9wnQNKGre43QkqZEquSvwTl8fdCbTdkQOuJuqTtR+XFkfHPkyl
      Qs3QiDnsKH+vZwFg2ZF7UMi9cUp21y1ZevBksmNvB6DMsKdtWshkt/WC1QmE+aa73Y52RiaT
      kRx0Bcead1LfWtJpW9+5qDQcpLhxC0ZrDQ7JRrUpDwC7ZDnnMsua96JS+BPvP8Zt+oCQKaws
      eISy5r1uAeBU3Rmy1V0ymfyM/SCnmphwH0fq1rGtbBFXJz3cYX6F4SBOycGAU/6WSoUPyYHj
      OVCzHKujxa1tNz14MtekPNUrI8K6ato4WV7degAGBP9cx/SQq9lQ3NYmemoAOFX7Ce9M0ysM
      BwhVp+CUHLTYGlzTI30zOVy3GqfkRH7S/u/uftA15QAw+KSmsM6YbHry6zdR31KE1dmCU2ob
      u97e/Heq9iHbp/7t1MoA4v1HU9q0HQkJGTIyQ2eyseRZypr3Eh8wCqujhaKGnxgYMg2l3OfE
      9u/HXxWFl9zHffv9MjjWnEOrrRG1MtA1Pc5/FNcOePmsj8nu6Pi32U+QOg6ZTHHK32YQe6o+
      7XCMnkmzpYr8+m9oMJdic5ox29ua3tr3tdorkHDfgeyt+owWWwPpIVeTFHg5gT6x57xNQ8Kv
      IzWoLdhKSJjtBnRN2/mu9N9sKnmeSN9MUoInIJe3/Sba//4na39eoqvzyqiohT0PAKGaNPy8
      Q5DLlPirIkkJmkhy4BWuA91yYmepvQI7rKv2CnTrF+iK8sQfy+G09aSqQFsTwVf5D7G/eikR
      voOI8B2IQq7slYdLLA4DamVAhx95+w/h1DbbC83PdwH/Izv2dx3mt9ffp7O/pWsbjW4/rokJ
      95/X4cBt/SkyluXde8ocGUfrN3JNyj96pT4Wh5H61mJe2NaxYxjA5jCh8vr5qqy7+6H99+J7
      mn6YAv23fHH4bpQKHxICxuLj5X/G4/fnv13HAQZtHd5mnE4HCrkXGWEz2FjyLEfrNxIfMIri
      hp+wO81uQxctdiPNloout99sb3YLAG0dlOdnxJzFbkRvLu2ybha7odsBYH/1UlbmP4JGGUx8
      wGi8Fb4dRq7JZDIWZH3A96UvkVe/nrz6touQ5KDx/DL9xXMa5iyTydyabfy8wwjVJBOgimbx
      oVs4Ur+WlOAJruPEaK3tUEb7tK769EI1KSQGjutZAJiYcB8pp7mq0pwYVmi01nQYkWKwVp+2
      w7FdY+sxoO32q6dKm7axv3opVyf+xe22OqfiA8qad3e+ktT55FP5KoOpNeW73TpD20gQ6PoP
      cSGZGN92F7C9vGN/i8Z1sFV3mGewVCNDgfqUE8yZT3nd3LndUN9STF1LQduoEbl7M0OgTyyN
      5uNUGg+69TmdK7VXICqFlhu76JdSnnKC6W7Iae8PaTAfJ1id2Okyqwv+RogmiVuHfoH3iecz
      bA4z+6uXdlnuz3+7mg7zDNYaVAp/FCeuJoN84oj2G8LR+g1MSX6Uo/Ub3Jp/oC1o+CpDuXXo
      F51+36kjW2Td3gP0+JBQKwPxl6L59eDFnc7XeHdvqLPdaWFN4RMkBFzGTVnvoTjRB6Nv1XG4
      brXbsv6qSGYP+BezpOepMh3mUM3XbCt7h7WFT7g1MfZUe8e5xd7WrBOuGQhAuWEfcIvbsuWG
      fShkSkI17n0oJxsVtcCzA9kTAy8D4EDNCvfKNe9D31pyxic9jdZaDtWuJMgnnkCfuBNT2w6m
      U293HdKZ7xDaO1eSg65wm251dHywqr2jrrupJBICsrE5W8mrW+c2vX3bEwPO7anW8ynCL4OM
      0GnklP+vQ/9BtHYoSrmagzVfIUk/P7hksukpaviBOP8RXXZunups9213tF95zU5/gVuHLXX7
      Nzv9X0BbB2JviPMfSf2JIawhmmS3f1pVRJdNSWfSdtsvI6f8f64245M5nDaaLGXEake4Tv7Q
      1ll5OvH+o5HLFByoWYF00hm20VzGsaadJJ3yOxwUNoP61mJqTfnk139DevBkt6Aa5z8Sk62O
      Zktlp9t/rk81e8l9kHBvVjtbcf4jabZUYLLpO69bN5tajdY6rA4TCYFjXSd/6LivrY4WrCce
      CJXJ5ET5ZTEl+a/E+Y+ktqXgpG07ccxbz3zM769e1ulyh2pXARDuOwCAUE0qweok8urWuS40
      oe38WmHYT0rQRLzkHftc2g0Mmda7o4BOFeWXRVrw1eyuXIxKoWVgaNsooI3Fz6GUa8iOud1t
      ebO9mR+PvUaYJg2jtYZtZe/Qam/kmtSfb93b7wS+K30Rg7Uag7WGvLp1J6Lg6QWfGFHwg+4V
      JsTfS4u9kQPVy8itXd1h2fZx3xuKn6HV3oiX3IdgdWKX/RAjIm9ge/kivs5/hFZ7ExG+Aylt
      3M73upeJ9M0kPeTq7u+4PjQx/n6O1K1nT9USt+kqhS+Xxd7OT8deY1neHxkV1TYK6DvdS1gc
      RsbH/7Hb3xF9Yt+uKvjrieYmGVF+Wacd83wmeXUb8PEKID6gY4d9vP8YfLz8yavbwFWJD53z
      d7S7LPa3HKhZzscHb+aK+HuI9M3A4jBS0riNgvpv+OOYH86p3BBNMqOiFrCr8mOW5N7O0Ig5
      OCU7BfrvGB55PYmBYwlQxXK4djWpwRPxVYZS3LiZHeXvn7ZcrSqC4ZE3sLtyMSvzH2FYxFxM
      Nj3flPwTSXJyRdxdbssPCp3JppLnWVP4BC32hg5Pro6O/jU7Kz7is8N3MD7+bqK1Q7E5zBxr
      zmFf1ec8lL3nnLY/RjuUgzVfsvTI3YyIvAGbs5XUoKvQqrp/9z8m5lb2VC1hSe5vuSL+bqL9
      BmN1tKBr2s7Bmq/dhtyejp93KN4KX/ZWLiFGOxRvuYZ8/bcnhpD/rNFcxscHFzIy6iYSA8eh
      UvhyvHkP5YYDZIROdy0X7puOUq5hR/l7+Hj5o1VFoFL4ddohfKBmBasKHmVAyFRitMPwknuj
      a8oht3YVvsowRp4YJSiTybgq4U8sy7uHjw4uZHz83VgdrXyvewm5zIuJCfeddhsVcqVnAwDA
      dQNfYcXRB9la9hZby94C2m4Rb8p6r8MIEEmS2F2xmGZr23MEGq8gfpH2PIPDfx47PiBkKrHa
      EZQZ9lB2dC9KuYZR0QvQKIMp0H972rokBmQzJHwOB2qWka//BrlMweDwa5mYcD/f6/7ttmyU
      XyYT4u9l8/E3+Dq/rVN0espTXQYAtTKAhVkfsjTvHlYV/PxAVZz/KOZmvHHOV4XnW/tdwJFT
      7mQArkx4oC3vSPn/yD1xNaJS+DE7/QVST2oiOJPUoImMjFrA7spP+PJo24iRuRn/PecAYLDU
      UGbYS1bYrE47vRRyL1KDruRQ7dfoW3XdekDudMI0aSzI+oDVhY+zvugp13R/VRSjom7uUdnX
      pD6FysufHeXvka/fBICfdzjj4u4AZMxI/QdLj9zNkty2i6dw34FcN+AVPj50+u+dnvIkDqeV
      vVWfsfdEcFd7BTE34w1i/N3by4PU8UT5Daa0aVuH5p/27fz1kE9YWfAom0qed033U4Yx7JSR
      M2djRORNFDX8RIH+W9folztGrD2rABDkE8fCwR+zuuCvbDzxnAaAn3cEI0567uhMvOQqrkl5
      ipUFj/LxwbZ9G+s/kl8OeIHPD//BtZxWFUFiYDabj7/J97qfR/UlBlzGtJQnXJ+9Fb78Iv05
      Vuc/yvrifwAwPPL6TgPAlKS/8uOx/5BXt47c2pWu6fEBY5iV9pxbc3JW+CwM1iq+KfkXy/Pa
      Tvg+Cn/mDHytW82dMqmze00P0LfqqG8txscrgGi/Ia42x3bv7ZtDg/kYD47dQYP5OE7JTrA6
      odMftFNyUmXMxSnZifAd2OFJwTOpbSnEYKkiwndghzGyp2qx6WkwH0el0BKiTjxjZ5YkOak0
      5mKy1hLoE0uoJu2iz4t0KqO1lirjYbzk3kRrh57VqIpTy2mylKP2CiLIJ/4i3E8STeZKWmx6
      1MogAlTRvbYNNkcr+tbSE3eeCW7HXautkSpjLhplMOG+A8/qO5stldSYjqJUaIjRDu2y2a7Z
      UkWrvRHliTvfrsurxmSrxUfhT6BPXK9sf6O5DJOtHq13eKdPynZXs6USk7UeH2UAgarYc6qb
      0VpLjeko/qqoDk9sn8zmaKW2pRCrw0SATwxBriZrd1ZHC3UthSjk3oSqU07bXGZztFLXWozd
      aSZQFXvaJHittkbKDfuQy7yI8x/Z7XPieQsAZ9IeAP502c6+roogCMIlT5Kcnm8CEgRBEC4s
      y478kZLGrRdOABgeOf+cnoIVBEEQzk5S0OVtza4XShOQIAiCcH5d0q+EFARBELomAoAgCEI/
      JQKAIAhCPyUCgCAIQj8lAoAgCEI/JQKAIAhCPyUCgCAIQj8lAoAgCEI/JQKAIAhCPyUCgCAI
      Qj8lAoAgCEI/JQKAIAhCPyUCgCAIQj8lAoAgCEI/JQKAIAhCPyUCgCAIQj8lAoAgCEI/JQKA
      IAhCP3XBvBNYuHhVVFT0dRVc1Go1Xl7isBaE7hDvBBYuKQaDAa1W29fVEISLgmgCEgRB6KdE
      ABAEQeinRAAQBEHop85LALA7LTRZetZR2BtlCIIgCD/rcQBYkfcgTskBQEPrMd7YOQmrowUA
      g6Wab0r+SaO5jN2Vi8+qXLO9mfLmfa7PXZWxo/w9ihs292ALumd/9TIWH7yFDw7cyIHq5R7/
      PkEQBE/rcQDwVQZTZcwFoKRxC8HqJI437wJA17SDYHWia1mn5MBgqaY7A49MtnqO1K/rMP3U
      MsbG3EZy0BWu+Ra7EZujtdMynZKdVlsTkiQh0ba+JEm02BpwSHa3ZW0OM0ZrnetzqCaFm7L+
      x82DP2Zv1ednrL8gCMKFrscDphMDsylt2kG0dgi6pp1MTLifI3VrSAmagK5pB+Ni78Ah2Tha
      t4GG1uMoFWq85Wqmp/6d9/fPY0HWB3grNBxv3s3R+o1MTnoEq6OFjcXPoG/VYbBUkxF6DaGa
      lE7L2F72LtHaocQHjGJj8TOYbPU4JQcJAWMZGXWTq557KpeQW7uKYHUiuqYd3D78S+xOC18e
      fZAAVSx1rUVMjL+XxMBs/m/3NYRqUlEq1FjsRuZmvEGMdhgAusYcQtRJPd1tgiAIfa7HASAh
      YAx7qz5Dirkdm7OVKL8sfjr+OgCN5nKC1PHUtRSREnwlU5MfA+Cz3DsAGBz2Sw7WfMXIqBs5
      WP0lo6JvBsBboWFK8mPsrfqMyUmPAHRZRtu1vBOASuMhrh/0DiovP7e7DIvDxOG61Swc/BEy
      mYwVeQ8AoFEGc1PW/3BKDprM5Ww+/gaJgdkEquOZk/EaAJtK/kmZYS9x/iNoaD3G9vL3mDPw
      tZ7uNkEQhD7X4wCg8tJic5qpMeUR7puOTCZDpfCjoVWHr3fIz18k93b9XyZra3kaEnEdnx66
      jWERc2mwHCfcN/30le2kjJONj/8jK44+gFym4Iq4u4jWDgGg2VxBlN9gZDKZ2/JGaw2rCh7D
      zzsMhcwLu9PaVvZJLWNhmlRM1loAjjXvZHT0r1EqfLq1bwRBEC5kvfLMfKTfILaXv8uwyPlA
      213BT8deJzHgstOu563QEK0dwne6fzMgeLLbPLnMC7vDfFb1iPMfRVLgOFptjXx59EFuzHoP
      gACfaMoNe7E7LchlCky2egAO161lZNSNpAVPosXWwPqif3Qos7RxO5fH3QlAZjqQSMsAACAA
      SURBVNgst+AgCIJwMeuVAJAYkM3SI3fzi7TnAEgKHMeqgr8yIeG+k5aSdfI/GB19C2/unswD
      Y7e7lRmgiqK65SjrCv9OYuA4QjUpXZbRbumRuwlUxWJxGEgIGOua7q3wZXT0r/ni8J14K3xp
      OREAYrTD2FTyPCWN22i2VKKQKQGoaylkTeHfMFiqifQbRKgmGYDtZYvwV0UzJOJXZ7+TBEEQ
      LjB9nguoyVzB97qX+OWAFzvMc0oOTNY6fL1DkcsUZyxLkiSMtloUMiUaZZDbPJO1Hl/vEJyS
      g48OLODXQz5BJpNjsRuwOlrQqiJcy35++E5+kfYsSrkPSoW65xspnDciF5AgdF+fpk3Mq9vA
      nqolTE95stP5cpnC7cR8JjKZDK13eKfzvin9JzZHKzanmdHRN7v6EFReWlRe7icMjTKwQwAR
      BEG41PT5HYAg9CZxByAI3Sd6NAVBEPopEQAEQRD6KREABEEQ+ikRAARBEPopEQAEQRD6KREA
      hD63d+9edu/ejV6vx2QysWXLFhobGwEoLS1l586dSJJEXV0dVVVVADidTnJzc/uy2oJw0RMB
      QOhTJpOJhoYGUlNT8fPz49tvv2XYsGF89913GI1G8vLyiI6OZuvWreTl5ZGTkwNAYWEhW7du
      7ePaC8LFrU8fBBOExsZG9Ho9e/bsYdy4cajVanx9fdFqtZSVlZGZmUlMTAxHjhzBx8cHrVaL
      0Wjk2LFjJCW1peV2OBw4nW0ZYW02GxaLpS83SRAuGiIACH0qJiaGuXPn0tzczJYtW1wncofD
      gbe3N2azGUmSXNOHDh3K/v378fLywm5ve4mPQqFAoWhLFaJUKlGpVH2zMYJwkRFNQEKfOnbs
      GJs2bWLz5s3Ex8ejUqn44YcfAEhISGDv3r2sXbuWlJQUADQaDcXFxQwcOLAvqy0IlwSRCkLo
      c3a7HUmSUCrbsrG2traiVrcl4XM6ndhstm5f1YtUEILQfb12B7Bp0ybKy8tPu8z333/fW193
      Vj755BPmz5/P6tWrz2l9p9PJ8uU/vwj+6aefBqC8vJxt27b1Sh37My8vL9fJH3Cd/AHkcrlo
      0hEED+lxACgpKWHmzJk8/PDD5Ofnn3bZF154oadfd9YkSWLRokUsWbKEmTNndnu922+/3e1z
      S0uL6/979uwB2tqpzea2l9Z8/PHHfPfdd71Q45/dfffdokNTEASP6XEnsEwm45133uHzzz8/
      p/W///57PvnkE2JjY3nwwQeRyWRs2LCBa6+9FqvVyosvvshf/vIXFAoFn3/+Oddddx2tra28
      +OKL1NTUcMcddzBs2DD27t1LQEAA+/fvx2w2c+ONNwLw7LPPUlNTw7PPPsvkyZPJzMzssK5e
      r+fAgQP4+/uzfv16goOD2bZtG08//TSJiYksXLgQH5+Or4H09vZGqVRy5MgRli5dSkBAAFu2
      bGHatGlUVlYye/ZsAPbt2wfAsGFtL5Y/ta7XXXcd77//PocPHyY2Npa7776bn376ic2bN/Pc
      c8+hVCp57LHHMBgMHeouCIJwzqRe8vLLL0vffvvtaZeZMWOG2+dDhw5Js2bNkurq6qS1a9dK
      N910k+R0OqVJkyZJkiRJ3377rTRo0CBp+/btktPplKZPny5JkiQtXLhQ2rx5s1RXVyddffXV
      ktFolN566y3pF7/4hfTnP/9ZKi4udn3H4cOHpenTp0tHjx6V6uvrO103Ly9PmjRpkjRnzhwp
      JydH0ul00uTJk6WjR49Kx48flyRJkq699lpXme3/3717t/SPf/xDMhqN0lNPPSW988470tGj
      RyWj0ShlZ2dLZrNZkiRJuummmySdTuda/9S6NjU1SV999ZVUXV0t/e9//5OefPJJqaamRpo5
      c6a0f/9+KT8/v8vtFtw1Nzf3dRUE4aLRp8NA16xZw0MPPURISAjTp0/nzTffRJIk0tPTKSgo
      YP369bz88susXbsWlUrFiBEjkCQJnU6HJEkcOXKE1NRU9u/fD8CoUaN48kn3l8ukpaXh5+dH
      enp6l+uGhIQgl8tZsmQJXl5tu0Sr1ZKefvqX1Lfz9fUlKiqKmJgY1zrz589n6dKlzJ49G5PJ
      RHx8vNs6p9ZVpVLx3//+l6amJurr6wkLCyMgIIC0tDTUanWXdR83btw5739BEPq3C/I5gJkz
      Z7Ju3ToqKyuZMmUK7733HuvXr3e14ZtMJkpKSgC4/PLLSUhI4ODBg906GXa2rtFoZOzYsa6T
      f2+49dZbuf7667Hb7Vx//fUd5p9c1zVr1rB27Vr+8pe/4OXlxcMPP9ztuguCIJyrHncC6/V6
      iouLqauro7KykuLiYpxOJ999952r7budw+Hg0KFDHDp0iNLSUq655hr+/e9/09TUxKZNm9Bo
      NMjlciZNmsRnn31GbGwsMpmMsLAwNm7cyNixY5HJZKSlpREcHMz06dPx9vamtbW1W3U9m3VN
      JhPHjh2jpqamW2VHRESwZcsWGhoaMJlMBAQEkJ6ezmuvvcavfnX6l8i3P/EaGBjI4sWL3cr8
      4YcfqKqq6tF2C4IgdEbx97///e89KeDHH39k9erVyOVy6uvr2b9/P9nZ2ZSWlqLRaIiKinIt
      a7FY2L59O4cPH8ZoNDJ58mTCwsJ46aWX0Ov1PP/886hUKpRKJQ6Hg1mzZhEaGkpMTAwxMTEM
      HToUgGnTprF69Wq+/vprIiIiuOKKK1AoFMTExBAU1PFdvnK5nMzMzNOuq9FoXKkFADIzM/nP
      f/5DY2MjI0eOBCArK8s1PysrC5lMhp+fH4mJiaSmprJnzx6WLVvGqFGjCAgIQKvVUl9f32kA
      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
      93bOO6/vnLo/4fWv2j6j9EwdveJ8F5pOURTlpy0fV2aCdvWzV7q+on52auSnSqPth/PGcs7x
      qvL77q+pry/d/oqiKL85938qds9ZRVEU5dfn/g+ly3k4YfqXOv6jut5291n1swN931TOOV69
      bJkXz++d4R8nxNbtPKK82v1fL8T9M+WVrr+9bPp3hn+s/I9jG5Wz4/+f+t7zbZ9T+qdPqK9f
      6/5vSuv4b+dd539+d6/iD7sW3PeL/V4udul2febkbiUWj6ivf9j8R4ov7EyYpmfqLeXlrr9W
      FEVR/q39C2qMP2/9lDLh61EUZfFtPN+6L3Ts/fLsX6ivQ1FfwnF2sd92/melc/KAoiiK0jL+
      UsI2f2f4xwnH2L7O/6T0TTeqr59tekIJRGYWPU4XOg/MHVOxeFT51sl7FVdgeN745lx6rhBL
      46qLgLQaHXeXfY5dpZ+m39XI4YH/icPXwQOV/3nBaQos63ik5mk0F90+n3cepGn0l4RiHjRo
      iMSDC07v8J8HzWwl7BxfeIJYPMq4t53dZV+4Ytye8DhxJUbT2K8S1sUZ6KM8fQd6bSo/fO8J
      arMfoCH/A+SZa684v7SUgoTilerMexicOam+frzu6+Rb1i4wh8Rb2NL0LUwHBvGY664w3/mn
      I2v3ovFeTFEU3hn53xeKPaIEox5KrJuvenqHrzOhCK46617eHvqu+lp3oWgFuFC+e+UKHf1l
      08wa8ZxhQ96T806zvfhTbMx/6g9x+TsZ9jRj985WLvsik0z6ey/E3MUx2/eYCdrRaDS4Q6NE
      4gEKLOvm3feL/V4Wq7vQaHQJ8Ws1OpRF1v/Byv+bX7b9OetyH014/0rb+NJ1X0jidtUx376Y
      u6Oqzb6f884DKIpCx+TvebT279TimYuPXa1Gi+ai3+HcZ4sdpzD/eWCOOzSKxZA9b93atZwr
      xPW55loYrUZHTdZuitI28sP3nlw0AViN+Qk73eE7z+H+/4ePb/iRWofw3XcfWDg4bSopujRy
      TdXqe3+09h/RaMBkyCQQdZFB8aLxGrSpaDTahHnsqfgyeeY16LQGPrHxR7iCw/RNv82v2v6C
      D697hhLrHQvOz6gzE4kFEt6LxAPotakXrffVV3L6I9OkGfOvar7zTXctmkafY8TTwkfX/wup
      +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
    </thumbnail>
  </thumbnails>
</workbook>
